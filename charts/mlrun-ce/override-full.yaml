global:

  # External host/ip to reach the k8s node. This might take various values if k8s is run in a VM or a cloud env
  externalHostAddress: localhost
  registry:
    url: mustprovide
    secretName: secretNameofcontainerregistrymustprovide

mlrun:
  # set the type of filesystem to use: filesystem, s3
  storage: filesystem
  api:
    fullnameOverride: mlrun-api
    persistence:
      enabled: true
      annotations:
        helm.sh/resource-policy: "keep"
    extraEnv:
      - name: MLRUN_SPARK_OPERATOR_VERSION
        value: spark-3
      - name: MLRUN_SPARK_APP_IMAGE
        value: gcr.io/iguazio/spark-app
      - name: MLRUN_SPARK_APP_IMAGE_TAG
        value: v3.2.1-mlk
      - name: MLRUN_KFP_URL
        value: http://ml-pipeline.mlrun.svc.cluster.local:8888
      - name: MLRUN_CE__MODE
        value: full
  db:
    persistence:
      enabled: true
      annotations:
        helm.sh/resource-policy: "keep"

jupyterNotebook:
  persistence:
    enabled: true
    annotations:
      helm.sh/resource-policy: "keep"

minio:
  enabled: true
  rootUser: minio
  rootPassword: minio123
  mode: distributed
  replicas: 4
  resources:
    requests:
      memory: 0.5Gi
  persistence:
    enabled: true
    size: 1Gi

spark-operator:
  enabled: true

pipelines:
  enabled: true
  persistence:
    enabled: true
    annotations:
      helm.sh/resource-policy: "keep"


kube-prometheus-stack:
  enabled: true
