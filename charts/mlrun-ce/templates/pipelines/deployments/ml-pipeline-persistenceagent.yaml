{{- if .Values.pipelines.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app: ml-pipeline-persistenceagent
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline-persistenceagent
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ml-pipeline-persistenceagent
      application-crd-id: kubeflow-pipelines
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      creationTimestamp: null
      labels:
        app: ml-pipeline-persistenceagent
        application-crd-id: kubeflow-pipelines
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: TTL_SECONDS_AFTER_WORKFLOW_FINISH
          value: "86400"
        - name: NUM_WORKERS
          value: "2"
        image: {{ .Values.pipelines.images.persistenceagent.repository }}:{{ .Values.pipelines.images.persistenceagent.tag }}
        imagePullPolicy: IfNotPresent
        name: ml-pipeline-persistenceagent
        resources:
          requests:
            cpu: 120m
            memory: 500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: ml-pipeline-persistenceagent
      serviceAccountName: ml-pipeline-persistenceagent
      terminationGracePeriodSeconds: 30
{{- end -}}
